{"name":"The VM Language","tagline":"The right language to specialize variability modeling","body":"### 2014 News\r\n- We published an Inria research report \"Modeling Variability in the Video Domain: Language and Experience Report\". This report presents the design rational and main constructs behind VM. [PDF](http://hal.inria.fr/docs/01/06/33/18/PDF/RR-8576.pdf)   [HAL](http://hal.inria.fr/hal-01023159).\r\n- We presented the paper \"ViViD: A Variability-Based Tool for Synthesizing Video Sequences\" in the tool demonstrations track of the 18th International Software Product Line Conference 2014 ([SPLC'14](http://www.splc2014.net)) at Florence, Italy. This paper summarizes the current VM tool support. [PDF](http://hal.inria.fr/docs/01/02/09/33/PDF/paper.pdf) [HAL](http://hal.inria.fr/hal-01020933).\r\n- We presented the paper \"A Variability-Based Testing Approach for Synthesizing Video Sequences\" in the main research track of the International Symposium on Software Testing and Analysis ([ISSTA'14](http://issta2014.org)). This paper presents pair-wise multi-objective configurations generation based on the VM language. [PDF](http://hal.inria.fr/docs/01/00/56/12/PDF/paper.pdf) [HAL](http://hal.inria.fr/hal-01003148).\r\n\r\n***\r\nVM was created as part of the ViViD Framework ([https://github.com/ViViD-DiverSE/](https://github.com/ViViD-DiverSE/)). In the ViViD-DiverSE repository you will find a copy of the VM source files (https://github.com/ViViD-DiverSE/VM-Source) as well as VANE, a pair-wise generator for video configuration files based on VM ([https://github.com/ViViD-DiverSE/VANE](https://github.com/ViViD-DiverSE/VANE)).\r\n\r\nAn enhanced version of VM has been developed in a private repository of the DiverSE group of INRIA, Rennes, France (http://diverse.irisa.fr). The VM repository (https://github.com/FAMILIAR-project/VM) is part of the Familiar Project (https://github.com/FAMILIAR-project) where users are including more complex examples and developing a web-based editor. Please talk to the administrator of the FAMILIAR-project to obtain access.\r\n***\r\n### VM special features\r\n_The most common types of additional information supported by VM are:_\r\n  - **Default** values that help to complete partial configurations, \r\n  - **Deltas** to discretise real domains, \r\n  - Controlled **descriptions** in natural language about the model itself, features, attributes and constraints, \r\n  - **Multi-ranges** and **multi-deltas** that allow to use several ranges and deltas to define the domain of the values of an attribute,\r\n  - **Not translatable** tags a purely informative feature or attribute,\r\n  - **Not decidable** tags a feature or attribute that do not help to differentiate products, \r\n  - **Runtime** tags a feature or attribute that varies only at runtime,\r\n  - **Multi-objective functions** allow to filter valid configurations. For example, generating only low-cost product configurations that also have a high-performance and a high-security level.\r\n\r\n_Also VM supports the most advanced characteristics in extended feature models, for example:\r\n  - Feature attributes.\r\n  - Multi-features.\r\n  - Packages and import mechanisms.\r\n  - Meta-information about features, attributes, constraints and the model itself.\r\n  - Configuration of feature and attributes values using tables.\r\n  - Constraints that support features, attributes, values and a rich set of operations and functions.\r\n\r\n***\r\n\r\n### Installation\r\nOnly prerequisite:\r\nAny updated Eclipse installation (https://www.eclipse.org/downloads/). \r\n\r\nWe tested VM using the Eclipse Kepler (4.3.2) SR2 Eclipse Modeling Tools, but you can use lighter versions such as Eclipse Standard, Eclipse IDE for Java and DSL Developers.\r\n\r\nThe VM language is composed of Eclipse plugins. You can install them using our Eclipse update site: `http://mao2013.github.io/VM/vmUpdateSite/`\r\n\r\nIf you are not sure where to introduce our update site address, follow the next steps:\r\n\r\n1. In Eclipse, choose **Help > Install New Software...**\r\n2. In the \"Work with\" section, click the **Add...** button. The \"Add Repository\" dialog box appears.\r\n3. Write `http://mao2013.github.io/VM/vmUpdateSite/` in \"Location\" and click the **OK** button. The \"Available Software\" wizard appears.\r\n4. click the **Select All** and then click **Finish**.\r\n5. Eclipse will take a while to resolve dependencies and ask you if you are sure to install unsigned content. Agree and accept all the questions.\r\n6. Restart Eclipse.\r\n\r\n***\r\n\r\n### Tutorials and examples\r\nPlease visit our VM project wiki [Here](https://github.com/ViViD-DiverSE/VM-Source/wiki).\r\n\r\n### Source and grammar\r\nPlease visit our VM project to obtain version 2.0 [Here](https://github.com/ViViD-DiverSE/VM-Source/)\r\n\r\n***\r\n\r\n### Technical support\r\nDo you still have troubles with VM? Please send an e-mail to alferez.mauricio@gmail.com or mathieu.acher@irisa.fr.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}